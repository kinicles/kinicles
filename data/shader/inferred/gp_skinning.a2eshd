<?xml version="1.0" encoding="UTF-8"?>
<a2e_shader version="1">
	<includes>global ni_skinning inferred_gbuffer</includes>
	
	<vertex_shader>
		<variables>
uniform mat4 local_mview;
uniform mat4 local_scale;
uniform mat4 mvpm;

in vec3 normal;
out vec3 out_normal;
		</variables>
		<program>
void main() {
	mat4 transform_mat = local_scale * local_mview;
	
	vec4 out_pos = apply_skinning(vec4(in_vertex, 1.0));
	
	out_normal = vec3(0.0);
	for(int i = 0; i < 4; i++) {
		int bone_index = bone_indices[i];
		mat3 bone_mat = mat3(bones.data[bone_index].mat);
		mat3 inv_bone_mat = mat3(transpose(bones.data[bone_index].inv_mat));
		out_normal += weights[i] * (bone_mat * (inv_bone_mat * normal));
	}
	out_normal = normalize(mat3(transform_mat) * out_normal);
	
	gl_Position = mvpm * out_pos;
}
		</program>
	</vertex_shader>
	
	<fragment_shader>
		<variables>
uniform vec2 Nuv;

in vec3 out_normal;
		</variables>
		<program>
void main() {
	check_mask_id();
	
	// write to gbuffer
	write_gbuffer(out_normal, Nuv);
}
		</program>
	</fragment_shader>

</a2e_shader>